name: "Claat export"

description: "Export Google documents using claat as a codelab in html/md format"

inputs:
  claat-version:
    description: "claat version. By default 'latest' or 'vx.x.x'"
    required: false
    default: "latest"
  source:
    description: "Google document ID or md file. (if codelabs-json is set, source will be ignored)"
    required: true
  auth:
    description: "Google OAuth2.0 token to access Google document. (not required when you export .md file to html)"
    required: false
    default: ""
  codelabs-path:
    description: "Path where will you export the codelab"
    required: false
    default: "codelabs"
  gaid:
    description: "Google Analytics ID"
    required: false
    default: "UA-3295395-7"
  ga4id:
    description: "Google Analytics v4 ID"
    required: false
    default: "G-E0H6JSF2N3"
  codelabs-json:
    description: "Path of codelabs.json that contain a list of Google duments id "
    required: false
    default: ""
  format:
    description: "Codelab export format (html, md or all)."
    required: false
    default: "html"

runs:
  using: "composite"
  steps:
    - name: Check Runner OS
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=â›” error hint::Support Linux Only"
        exit 1

    - name: Export Go bin to all steps
      id: go-env
      shell: bash
      run: |
        echo "::group::Export Go bin to all steps"
        go version
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        echo "go-bin-path=$(go env GOPATH)/bin" >> "$GITHUB_OUTPUT"
        echo "go bin exported."
        echo "::endgroup::"

    # Save/Restore claat
    - name: claat cache
      uses: actions/cache@v4
      id: claat-cache
      with:
        path: |
          ${{ steps.go-env.outputs.go-bin-path }}/*
        key: go-claat

    - name: Setup claat (latest)
      if: steps.claat-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "::group::Setup claat (latest)"
        mkdir -p $(go env GOPATH)/bin
        go install github.com/googlecodelabs/tools/claat@${{ inputs.claat-version }}
        claat version
        echo "::endgroup::"

    - name: Get source(s)
      if: "${{ inputs.codelabs-json != '' }}"
      id: data
      shell: bash
      run: |
        echo "::group::Get source(s)"
        sources=$(cat ${{ inputs.codelabs-json }} | grep "source" | sed 's/.*": "\(.*\)"/\1/')
        echo "sources=$sources" >> "$GITHUB_OUTPUT"
        echo "::endgroup::"

    - name: Command builder
      shell: bash
      run: |
        echo "::group::Build command"
        claat_command="claat export"
        [[ -n "${{ inputs.gaid }}" ]] && CLAAT_COMMAND+=" -ga \"${{ inputs.gaid }}\""  
        [[ "${{ inputs.format }}" == "md" ]] && CLAAT_COMMAND+=" -f \"${{ inputs.format }}\""
        [[ -n "${{ inputs.auth }}" ]] && CLAAT_COMMAND+=" -auth \"${{ inputs.auth }}\""
        echo "CLAAT_COMMAND=$claat_command" >> $GITHUB_ENV 
        echo "::endgroup::"

    - name: Export codelab(s)
      shell: bash
      env: 
        SOURCES: ${{ inputs.codelabs-json == '' && inputs.source || steps.data.outputs.sources }}
      run: |
        echo "::group::Export codelab(s)"
        mkdir -p ${{ inputs.codelabs-path }}
        echo -e "exporting\n$SOURCES"
        IFS=$'\n'
        for source in $SOURCES; do
          command_default="${CLAAT_COMMAND} -o \"${{ inputs.codelabs-path }}/\" $source"
          if [[ "${{ inputs.format }}" == "all" ]]; then
            mkdir -p ${{ inputs.codelabs-path }}-md
            command_md="${CLAAT_COMMAND} -o \"${{ inputs.codelabs-path }}-md/\" -f \"md\" $source"
            eval "$command_default $@"
            eval "$command_md $@"
          else
            eval "$command_default $@"
          fi
        done
        echo "::endgroup::"

    # ga4id parser has been added to md parser but not yet in gdocs parser
    - name: Fix missing ga4id
      shell: bash
      if: inputs.format != 'md'
      working-directory: ${{ inputs.codelabs-path }}
      run: |
        echo "::group::Fix missing ga4id"
        find . -type f -name "index.html" -print0 | while IFS= read -r -d '' file; do
          sed -i 's/ga4id=""/ga4id="${{ inputs.ga4id }}"/g; s/codelab-ga4id=""/codelab-ga4id="${{ inputs.ga4id }}"/g' "$file"
        done
        echo "Missing ga4id in html format has been added."
        echo "::endgroup::"

# Ref: https://haya14busa.github.io/github-action-brandings/
branding:
  icon: 'upload'
  color: 'white'
