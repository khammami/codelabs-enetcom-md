name: "Claat export"

description: "Export Google documents using claat as a codelab in html/md format"

inputs:
  claat-version:
    description: "claat version. By default 'latest' or 'vx.x.x'"
    required: false
    default: "latest"
  document-id:
    description: "Google document ID"
    required: true
  auth:
    description: "Google OAuth2.0 token to access Google document"
    required: true
  codelabs-path:
    description: "Path where will you export the codelab"
    required: false
    default: "/"
  gaid:
    description: "Google Analytics ID"
    required: false
    default: "UA-3295395-7"
  ga4id:
    description: "Google Analytics v4 ID"
    required: false
    default: "G-E0H6JSF2N3"
  codelabs-json:
    description: "Path of codelabs.json that contain a list of Google duments id "
    required: false
    default: ""
  format:
    description: "Codelab export format (html, md or all)."
    required: false
    default: "html"

runs:
  using: "ubuntu-latest"
  steps:
  - uses: actions/checkout@v4

  - name: Export Go bin to all steps
    id: go-env
    run: |
      go version
      echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      echo "go-bin-path=$(go env GOPATH)/bin" >> "$GITHUB_OUTPUT"

  # Save/Restore claat
  - name: claat cache
    uses: actions/cache@v4
    id: claat-cache
    with:
      path: |
        ${{ steps.go-env.outputs.go-bin-path }}/*
      key: go-claat

  - name: Setup claat (latest)
    if: steps.claat-cache.outputs.cache-hit != 'true'
    run: |
      mkdir -p $(go env GOPATH)/bin
      go install github.com/googlecodelabs/tools/claat@${{ inputs.claat-version }}
      claat version

  - name: Check codelabs directory
    run: |
      if [ ! -d ${{ inputs.codelabs-path }} ]; then
          mkdir ${{ inputs.codelabs-path }}
      fi

  - name: Create codelabs directory for md format
    if: inputs.format == 'all'
    run: |
      if [ ! -d ${{ inputs.codelabs-path }}-md ]; then
          mkdir ${{ inputs.codelabs-path }}-md
      fi
